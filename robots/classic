\Global tables with info about players
	int PlayersInfo[2, MaxNum](0), MiddleDifSold(0)
	int WinNumSell(0), WinNumBuy(1)
	int PriceIndentSell(500), PriceIndentBuy(61)

birth
	PrintMarketInfo()
	PrintMyInfo()
\Produce products
	int pp(0)
	if (MyRaw < MyFact + MyAfact*2) {
		pp = MyRaw;
	} else {
		pp = MyFact + MyAfact*2;
	}
	if (pp*2000 >= MyMoney) {
		pp = MyMoney / 2000;
	}
	prod(pp)
\Sell products
	int i(0), SumProd(0)
	while((i = i + 1) <= MaxNum) {				\Get product another players
		if (PlayerActive(i)) {
			SumProd = SumProd + PlayerProd(i);
		}
	}
	if (SumProd <= MaxProd) {
		sell(MyProd, MaxProdPrice)
	} else {
		int sp(0)
		if (MaxProd < MyProd) {
			sp = MaxProd;
		} else {
			sp = MyProd;
		}
		i = 0;
		int SoldDif(0), num(0)
		while((i = i + 1) <= MaxNum) {			\Get difference in sold price 
			if (PlayerActive(i) and i =! MyNum) {
				if (PlayerLastSold(i) > 0) {
					PlayersInfo[0, i-1] = PlayersInfo[0, i-1] + 1;
				}
				if (PlayerDifSold(i) > 0) {
					SoldDif = SoldDif + PlayerDifSold(i)*PlayersInfo[0, i-1];
					num = num + PlayersInfo[0, i-1];
				}
			}
		}
		if (num) {
			SoldDif = SoldDif / num;
		}
		if (PlayerLastSold(MyNum) == 0) {
			PriceIndentSell = PriceIndentSell + 391;
		}
		put(SoldDif, PriceIndentSell)
		if (MaxProdPrice - (SoldDif + PriceIndentSell) < 2000) {
			PriceIndentSell = 108;
		}
		sell(sp, MaxProdPrice - (SoldDif + PriceIndentSell))
	}
\Buy raws
	int remain(MyMoney-pp*2000-(MyRaw-pp)*300-MyProd*500-MyFact*1000-MyAfact*1500)
	if (remain > 0) {
		i = 0;
		int BoughtDif(0), num(0), BoughtPrice(0)
		while((i = i + 1) <= MaxNum) {			\Get difference in bought price 
			if (PlayerActive(i) and i =! MyNum) {
				if (PlayerLastBought(i) > 0) {
					PlayersInfo[1, i-1] = PlayersInfo[1, i-1] + 1;
				}
				if (PlayerDifBought(i) > 0) {
					BoughtDif = BoughtDif + PlayerDifBought(i)*PlayersInfo[1, i-1];
					num = num + PlayersInfo[1, i-1];
				}
			}
		}
		if (num) {
			BoughtDif = BoughtDif / num;
		}
		if (PlayerLastBought(MyNum) == 0) {
			PriceIndentBuy = PriceIndentBuy + 47;
		}
		put(BoughtDif, PriceIndentBuy)
		if (MinRawPrice + BoughtDif + PriceIndentBuy > 2500) {
			PriceIndentSell = 108;
		}
		BoughtPrice = MinRawPrice + BoughtDif + PriceIndentBuy;
		int BoughtRaw(MyFact + MyAfact*2 - (MyRaw - pp))
		if (BoughtRaw > MaxRaw) {
			BoughtRaw = MaxRaw;
		}
		if (BoughtPrice * BoughtRaw > remain) {
			buy(remain / BoughtPrice, BoughtPrice)
		} else {
			buy(BoughtRaw, BoughtPrice)
		}
		remain = remain - BoughtRaw * BoughtPrice;
	}
\Build factories
	if (remain > 30000 and MyFact + MyAfact*2 < 6) {
		build
	}
death
